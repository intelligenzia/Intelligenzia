{"version":3,"sources":["webpack:///./src/templates/CategoryTemplate.js","webpack:///./src/components/List/List.js","webpack:///./src/components/List/index.js"],"names":["CategoryTemplate","props","category","pageContext","data","allMarkdownRemark","totalCount","edges","facebook","site","siteMetadata","Fragment","Consumer","theme","className","categoryQuery","List","space","stack","m","xs","font","size","s","lineHeight","l","map","edge","node","title","frontmatter","slug","fields","key","to"],"mappings":"0FAAA,8HAmDeA,UAzCU,SAAAC,GAAU,IAEhBC,EAObD,EAPFE,YAAeD,SAFe,EAS5BD,EANFG,KAH8B,IAI5BC,kBAAqBC,EAJO,EAIPA,WAAYC,EAJL,EAIKA,MAEfC,EANU,EAK5BC,KACEC,aAAgBF,SAKtB,OACE,kBAAC,IAAMG,SAAP,KACE,kBAAC,eAAaC,SAAd,MACG,SAAAC,GAAK,OACJ,kBAAC,IAAD,CAASA,MAAOA,GACd,gCACE,kBAAC,IAAD,CAAUA,MAAOA,GACf,yDADF,IACuC,kBAAC,IAAD,MACpCX,GAEH,uBAAGY,UAAU,QAAb,yBACwB,gCAASR,GAAqB,IACnDA,EAAa,EAAI,YAAc,YAElC,kBAAC,IAAD,CAAMC,MAAOA,EAAOM,MAAOA,SAMnC,kBAAC,IAAD,CAAKL,SAAUA,MAad,IAAMO,EAAa,c,6ECNXC,EA5CF,SAAAf,GAAU,IACbM,EAAiBN,EAAjBM,MAAOM,EAAUZ,EAAVY,MAEf,OACE,kBAAC,IAAMF,SAAP,KACE,6DAoBcE,EAAMI,MAAMC,MAAMC,EACjBN,EAAMI,MAAME,EAIZN,EAAMI,MAAMG,GACVP,EAAMQ,KAAKC,KAAKC,EACdV,EAAMQ,KAAKG,WAAWC,OA1BtClB,EAAMmB,KAAI,SAAAC,GAAS,IAAD,EAMbA,EAJFC,KACiBC,EAHF,EAGbC,YAAeD,MACLE,EAJG,EAIbC,OAAUD,KAId,OACE,wBAAIE,IAAKF,EAAT,qCAUQlB,EAAMI,MAAMC,MAAMC,EACjBN,EAAMI,MAAME,EAIZN,EAAMI,MAAMG,GACVP,EAAMQ,KAAKC,KAAKC,EACdV,EAAMQ,KAAKG,WAAWC,OAhBjC,kBAAC,OAAD,CAAMS,GAAIH,GAAOF,QAZ3B,0FAqBgBhB,EAAMI,MAAMC,MAAMC,EArBlC,YAsBiBN,EAAMI,MAAME,EAtB7B,kEA0BiBN,EAAMI,MAAMG,GA1B7B,gBA2BmBP,EAAMQ,KAAKC,KAAKC,EA3BnC,gBA4BqBV,EAAMQ,KAAKG,WAAWC,EA5B3C,eAqBgBZ,EAAMI,MAAMC,MAAMC,EACjBN,EAAMI,MAAME,EAIZN,EAAMI,MAAMG,GACVP,EAAMQ,KAAKC,KAAKC,EACdV,EAAMQ,KAAKG,WAAWC,OCpC/C","file":"component---src-templates-category-template-js-6415fe2f1cb94f2d2b14.js","sourcesContent":["import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\n\nconst CategoryTemplate = props => {\n  const {\n    pageContext: { category },\n    data: {\n      allMarkdownRemark: { totalCount, edges },\n      site: {\n        siteMetadata: { facebook }\n      }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline theme={theme}>\n                <span>Uutiset kategorioittain</span> <FaTag />\n                {category}\n              </Headline>\n              <p className=\"meta\">\n                Tässä kategoriassa on <strong>{totalCount}</strong>{\" \"}\n                {totalCount > 1 ? \"julkaisua\" : \"julkaisu\"}\n              </p>\n              <List edges={edges} theme={theme} />\n            </header>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo facebook={facebook} />\n    </React.Fragment>\n  );\n};\n\nCategoryTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired\n};\n\nexport default CategoryTemplate;\n\n// eslint-disable-next-line no-undef\nexport const categoryQuery = graphql`\n  query PostsByCategory($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___prefix], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            category\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        facebook {\n          appId\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","export { default } from \"./List\";\n"],"sourceRoot":""}